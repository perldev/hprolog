%%% Тестирование производительности

%%этого не хватает в GNU ...
assert(X) :- asserta(X).

writeln(X):- write(X),nl.

not(X) :- call(X),!,fail;true.

profile(X) :- statistics(runtime,[_,_]),call(X),
              statistics(runtime,[_,T]),write('Total time:'), write(T), writeln(' ms').

%%%%%%%%%%%%%%%%%
initfact([],_).
initfact([X|T],N) :- assert(mas(a,N,X)), N1 is N+1, initfact(T,N1).

summ(M,0,S):-mas(M,0,S).
summ(M,N,S):-mas(M,N,S0), N1 is N-1, summ(M,N1,S1), S is S0+S1.

prod(M,0,S):-mas(M,0,S).
prod(M,N,S):-mas(M,N,S0), N1 is N-1, prod(M,N1,S1), S is S0*S1.

summ2(_,-1,S,S).
summ2(M,N,S,Sr):-mas(M,N,S0), N1 is N-1, S1 is S+S0, summ2(M,N1,S1,Sr).

maxvector7(M,V):-mas(M,_,V),not((mas(M,_,X),X>V)).

init:-Rand=[1,98,41,51,87,80,77,11,73,4,9,40,61,9,47,21,44,89,51,44,51,54,34,62,85,68,53,52,45,32,84,24,80,65,75,16,87,18,12,84,69,12,53,54,86,66,42,22,40,16,24,41,77,64,70,78,26,52,32,70,79,1,34,37,77,52,30,43,23,87,98,18,19,43,85,59,47,67,70,11,63,8,49,64,13,71,56,48,18,40,69,91,34,54,39,40,82,69,63,2,72,28,45,45,77,52,34,20,4,59,86,53,65,46,16,52,30,65,84,88,70,31,96,89,92,40,82,48,60,48,21,36,29,25,93,38,87,15,71,63,72,20,92,20,28,29,68,84,38,63,30,47,99,61,83,80,30,14,57,79,37,83,14,36,15,30,36,70,34,6,26,74,62,36,29,56,13,54,60,83,8,80,33,63,92,78,33,38,5,10,40,10,57,80,44,88,58,42,99,35,85,64,62,54,54,53,71,43,32,25,79,16,88,47,34,48,82,48,27,21,4,84,83,22,57,46,5,36,56,32,18,35,7,21,18,30,80,26,44,71,42,97,31,31,83,59,87,32,38,45,67,72,48,50,89,87,66,2,92,4,57,24,52,89,13,11,44,29,7,79,92,33,66,72,68,63,22,64,33,93,82,6,88,11,96,32,51,82,22,57,99,13,22,7,52,13,63,69,50,42,27,
         51,99,80,31,50,92,40,3,90,89,86,45,81,37,48,64,11,58,10,61,9,90,28,54,80,50,96,1,32,76,96,69,7,6,21,82,60,31,49,54,15,32,68,17,11,71,73,60,75,73,51,34,64,23,6,95,7,31,42,68,37,1,69,37,18,19,24,59,26,2,46,53,27,9,23,26,79,36,11,82,11,12,97,29,11,5,72,73,9,50,71,72,43,80,21,78,93,20,52,58,63,1,80,4,71,61,74,5,66,41,53,23,51,40,69,64,30,94,61,26,11,22,33,10,70,18,60,36,27,27,74,83,70,80,4,58,71,85,76,13,56,40,78,13,92,84,36,68,53,5,76,78,87,46,37,88,6,63,83,51,71,61,39,7,75,92,85,87,38,23,96,14,90,74,47,8,63,82,31,15,60,25,74,25,76,12,17,30,37,65,1,89,32,75,50,23,65,68,9,92,50,96,20,66,32,66,87,15,7,55,34,57,53,67,86,42,54,61,7,74,22,77,99,58,37,24,62,70,45,99,26,56,11,53,57,56,5,46,35,48,99,30,39,7,39,38,60,7,24,47,61,58,51,70,24,46,97,78,77,62,1,46,2,7,63,81,17,77,84,51,81,56,34,69,64,28,83,28,36,95,52,29,90,82,91,45,11,93,48,26,24,56,91,87,36,99,7,83,73,6,
         56,35,10,79,26,69,84,92,15,48,72,86,14,97,43,32,32,16,45,13,88,72,83,56,37,83,7,24,81,99,73,98,68,38,47,78,15,6,82,11,61,81,41,33,7,43,49,91,80,62,95,66,80,59,20,34,35,7,42,17,57,47,4,15,38,48,44,3,2,29,58,23,35,57,89,22,93,7,33,13,77,53,82,36,42,83,20,90,66,20,10,67,66,59,13,16,99,5,70,98,50,37,43,44,63,72,54,32,54,34,19,92,58,16,73,36,29,48,88,36,84,21,28,50,74,83,39,47,93,66,23,90,79,31,22,24,26,95,23,65,94,98,100,41,3,63,74,34,94,95,22,4,47,19,94,25,70,3,67,85,71,61,60,40,14,38,63,1,23,12,81,48,62,23,85,48,98,71,26,39,87,3,26,76,28,72,33,65,3,5,11,91,41,79,68,49,50,48,76,5,26,87,69,53,54,23,68,63,79,8,43,34,88,18,98,10,26,60,64,15,36,6,60,8,62,4,23,91,24,33,77,8,2,93,72,36,57,9,33,67,37,46,4,70,98,84,30,45,79,43,49,33,53,59,53,80,31,90,83,64,41,57,96,90,92,21,78,65,6,39,20,25,3,41,84,37,82,57,86,65,81,50,95,22,98,5,73,22,58,42,79,54,47,89,35,10,7,62,98,63,
         97,75,82,68,44,12,24,93,43,39,55,80,24,55,35,56,89,52,2,62,12,43,8,43,23,40,22,75,54,65,67,24,72,97,37,73,8,28,31,23,33,65,84,62,93,21,89,88,62,58,99,83,3,54,80,95,44,39,89,30,56,42,88,48,37,80,11,34,38,68,4,98,28,20,71,49,58,5,61,31,95,56,15,71,79,34,91,75,97,23,100,12,30,96,99,31,64,27,21,8,71,8,20,28,19,26,59,1,94,39,27,31,22,97,56,81,64,57,82,43,78,26,39,35,45,14,82,12,45,8,55,84,7,29,67,1,98,37,59,75,10,29,76,12,2,75,82,92,80,77,5,58,44,47,63,17,43,37,93,28,10,81,10,93,58,34,68,31,76,44,4,73,50,1,91,11,31,90,58,65,91,38,98,75,7,24,36,85,97,34,66,58,74,67,65,24,99,27,50,13,11,54,7,53,64,58,57,97,69,41,93,10,14,70,90,47,98,22,99,91,96,27,23,72,59,54,1,71,58,51,74,91,50,62,57,20,92,81,70,99,54,1,85,59,17,87,62,76,88,24,38,44,97,60,84,86,79,73,35,78,93,44,11,93,45,50,48,52,18,59,57,73,43,36,65,79,91,26,26,72,2,30,99,67,82,82,94,54,56,94,18,3,85,50,9,13,28,3,40,73,
         1,98,41,51,87,80,77,11,73,4,9,40,61,9,47,21,44,89,51,44,51,54,34,62,85,68,53,52,45,32,84,24,80,65,75,16,87,18,12,84,69,12,53,54,86,66,42,22,40,16,24,41,77,64,70,78,26,52,32,70,79,1,34,37,77,52,30,43,23,87,98,18,19,43,85,59,47,67,70,11,63,8,49,64,13,71,56,48,18,40,69,91,34,54,39,40,82,69,63,2,72,28,45,45,77,52,34,20,4,59,86,53,65,46,16,52,30,65,84,88,70,31,96,89,92,40,82,48,60,48,21,36,29,25,93,38,87,15,71,63,72,20,92,20,28,29,68,84,38,63,30,47,99,61,83,80,30,14,57,79,37,83,14,36,15,30,36,70,34,6,26,74,62,36,29,56,13,54,60,83,8,80,33,63,92,78,33,38,5,10,40,10,57,80,44,88,58,42,99,35,85,64,62,54,54,53,71,43,32,25,79,16,88,47,34,48,82,48,27,21,4,84,83,22,57,46,5,36,56,32,18,35,7,21,18,30,80,26,44,71,42,97,31,31,83,59,87,32,38,45,67,72,48,50,89,87,66,2,92,4,57,24,52,89,13,11,44,29,7,79,92,33,66,72,68,63,22,64,33,93,82,6,88,11,96,32,51,82,22,57,99,13,22,7,52,13,63,69,50,42,27,
         51,99,80,31,50,92,40,3,90,89,86,45,81,37,48,64,11,58,10,61,9,90,28,54,80,50,96,1,32,76,96,69,7,6,21,82,60,31,49,54,15,32,68,17,11,71,73,60,75,73,51,34,64,23,6,95,7,31,42,68,37,1,69,37,18,19,24,59,26,2,46,53,27,9,23,26,79,36,11,82,11,12,97,29,11,5,72,73,9,50,71,72,43,80,21,78,93,20,52,58,63,1,80,4,71,61,74,5,66,41,53,23,51,40,69,64,30,94,61,26,11,22,33,10,70,18,60,36,27,27,74,83,70,80,4,58,71,85,76,13,56,40,78,13,92,84,36,68,53,5,76,78,87,46,37,88,6,63,83,51,71,61,39,7,75,92,85,87,38,23,96,14,90,74,47,8,63,82,31,15,60,25,74,25,76,12,17,10,37,65,1,89,32,75,50,23,65,68,9,92,50,96,20,66,32,66,87,15,7,55,34,57,53,67,86,42,54,61,7,74,22,77,99,58,37,24,62,70,45,99,26,56,11,53,57,56,5,46,35,48,99,30,39,7,39,38,60,7,24,47,61,58,51,70,24,46,97,78,77,62,1,46,2,7,63,81,17,77,84,51,81,56,34,69,64,28,83,28,36,95,52,29,90,82,91,45,11,93,48,26,24,56,91,87,36,99,7,83,73,6,
         56,35,10,79,26,69,84,92,15,48,72,86,14,97,43,32,32,16,45,13,88,72,83,56,37,83,7,24,81,99,73,98,68,38,47,78,15,6,82,11,61,81,41,33,7,43,49,91,80,62,95,66,80,59,20,34,35,7,42,17,57,47,4,15,38,48,44,3,2,29,58,23,35,57,89,22,93,7,33,13,77,53,82,36,42,83,20,90,66,20,10,67,66,59,13,16,99,5,70,98,50,37,43,44,63,72,54,32,54,34,19,92,58,16,73,36,29,48,88,36,84,21,28,50,74,83,39,47,93,66,23,90,79,31,22,24,26,95,23,65,94,98,100,41,3,63,74,34,94,95,22,4,47,19,94,25,70,3,67,85,71,61,60,40,14,38,63,1,23,12,81,48,62,23,85,48,98,71,26,39,87,3,26,76,28,72,33,65,3,5,11,91,41,79,68,49,50,48,76,5,26,87,69,53,54,23,68,63,79,8,43,34,88,18,98,10,26,60,64,15,36,6,60,8,62,4,23,91,24,33,77,8,2,93,72,36,57,9,33,67,37,46,4,70,98,84,30,45,79,43,49,33,53,59,53,80,31,90,83,64,41,57,96,90,92,21,78,65,6,39,20,25,3,41,84,37,82,57,86,65,81,50,95,22,98,5,73,22,58,42,79,54,47,89,35,10,7,62,98,63,
         97,75,82,68,44,12,24,93,43,39,55,80,24,55,35,56,89,52,2,62,12,43,8,43,23,40,22,75,54,65,67,24,72,97,37,73,8,28,31,23,33,65,84,62,93,21,89,88,62,58,99,83,3,54,80,95,44,39,89,30,56,42,88,48,37,80,11,34,38,68,4,98,28,20,71,49,58,5,61,31,95,56,15,71,79,34,91,75,97,23,100,12,30,96,99,31,64,27,21,8,71,8,20,28,19,26,59,1,94,39,27,31,22,97,56,81,64,57,82,43,78,26,39,35,45,14,82,12,45,8,55,84,7,29,67,1,98,37,59,75,10,29,76,12,2,75,82,92,80,77,5,58,44,47,63,17,43,37,93,28,10,81,10,93,58,34,68,31,76,44,4,73,50,1,91,11,31,90,58,65,91,38,98,75,7,24,36,85,97,34,66,58,74,67,65,24,99,27,50,13,11,54,7,53,64,58,57,97,69,41,93,10,14,70,90,47,98,22,99,91,96,27,23,72,59,54,1,71,58,51,74,91,50,62,57,20,92,81,70,99,54,1,85,59,17,87,62,76,88,24,38,44,97,60,84,86,79,73,35,78,93,44,11,93,45,50,48,52,18,59,57,73,43,36,65,79,91,26,26,72,2,30,99,67,82,82,94,54,56,94,18,3,85,50,9,13,28,3,40,73],
    %write(Rand),
    %retractall(mas(_,_,_)),
    initfact(Rand,0).
    

test1 :-
    write('filling base 2400 elem:'), profile(init),nl,
    write('get sum(rec.):'), profile(summ(a,2400,X)),write(sum=X),nl,
    write('get sum(tail rec.):'), profile(summ2(a,2400,0,X1)),write(sum=X1),nl,
    %%%write('get prod(rec.):'), profile(prod(a,2400,X2)),write(prod=X2),nl,
    write('get max:'), profile(maxvector7(a,M)),write(max=M),nl.


%%%%%%%%%%%%%%%%%%%
make2(0,S,S):-!.
make2(N,T,S):- N1 is N-1, make2(N1,[N|T],S).

app([],Aq,Aq).
app([Aq|Sw],Dw,[Aq|Cw]):- app(Sw,Dw,Cw).

rev([],[]).
rev([Ax|L],Sx):- rev(L,S1), app(S1,[Ax],Sx).

insert(X,[],[X]).
insert(X,[H|T],[H|T1]):-X>H, insert(X,T,T1).
insert(X,[H|T],[X,H|T]):-X=<H.

sort_in([],[]).
sort_in([H|T],T2):-sort_in(T,T1),insert(H,T1,T2),!.

sort_in([],S,S).
sort_in([H|T],S,T2):-insert(H,S,T1),!,sort_in(T,T1,T2).

part(_,[],[],[]):-!.
part(X,[H|T],[H|T1],T2):-X>H, part(X,T,T1,T2).
part(X,[H|T],T1,[H|T2]):-X=<H,part(X,T,T1,T2).

quik([],[]):-!.
quik([A],[A]):-!.
quik([H|T],T2):-part(H,T,L,B),!,
    quik(L,L1),!,quik(B,L2),!,app(L1,[H|L2],T2).

sortbub(L,L2):- bub(L,L1),!, sortbub(L1,L2).
sortbub(L,L):-!.

bub([A,B|L],[B,A|L]):- A>B,!.
bub([A|L],[A|L2]):-bub(L,L2),!.

ordered([]):-!.
ordered([_]):-!.
ordered([H,H2|T]):-H=<H2,ordered([H2|T]).

test2 :-
    write('making list 1000 elem:'), profile(make2(1000,[],S)),nl,
    write('revers:'), profile(rev(S,List)),nl,
    write('sort insert:'), profile(sort_in(List,Res1)),nl,
    write('sort insert(tail):'), profile(sort_in(S,[],Res11)),ordered(Res11),nl,
    %%write('sort buble:'), profile(sortbub(List,Res2)),nl,
    write('sort quick:'), profile(quik(List,Res3)),ordered(Res3),nl,
    write('sort embeded:'), profile(msort(List,Res4)),ordered(Res4),nl.
    
    
%%%%%%%%%%%%%%%%%%%%%%%
fib(1,1).
fib(2,1).
fib(X,Y):- X>2, X1 is X-1, X2 is X-2,
           fib(X1,F1),
           fib(X2,F2), Y is F1+F2.
           
range(X,Y,X):-X=<Y.
range(X,Y,Z):-X<Y, X1 is X+1, range(X1,Y,Z).

simple(X) :- not((range(2,X,Y),X\=Y, 0=:=X mod Y)).


test3 :-
    write('fib N27:'), profile(fib(27,196418)),nl,
    write('simple num:'), profile(simple(1046527)),nl.




